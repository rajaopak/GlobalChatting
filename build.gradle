plugins {
    id 'java'
    id 'eclipse'
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.8"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.rajaopak'
version = '1.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url ("https://hub.spigotmc.org/nexus/content/repositories/snapshots/") }
    maven { url ("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { url ("https://jitpack.io") }
}

/*test {
    useJUnitPlatform()
}*/

dependencies {
    implementation 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'junit:junit:4.13.1'

    annotationProcessor 'com.velocitypowered:velocity-api:3.3.0-SNAPSHOT'

    compileOnly 'com.velocitypowered:velocity-api:3.3.0-SNAPSHOT'
    compileOnly 'net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT'

    compileOnly 'net.luckperms:api:5.4'
    compileOnly files('lib/AdvancedBan.jar')

    compileOnly 'com.gitlab.ruany:LiteBansAPI:0.5.0'

    implementation "dev.dejvokep:boosted-yaml:1.3.7"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

shadowJar {
    minimize()

    relocate 'dev.dejvokep.boostedyaml', 'dev.rajaopak.libs.boostedyaml'

    doLast {
        copy {
            from archivePath
            into 'D:\\server\\velocity\\plugins'
        }
        copy {
            from archivePath
            into 'D:\\server\\velo-server\\proxy\\plugins'
        }
    }
}

tasks {
    compileJava {
        options.encoding = "UTF-8"
    }

//    runVelocity {
//        // Configure the Velocity version for our task.
//        // This is the only required configuration besides applying the plugin.
//        // Your plugin's jar (or shadowJar if present) will be used automatically.
//        velocityVersion("3.3.0-SNAPSHOT")
//    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    expand props
    filteringCharset 'UTF-8'
    filesMatching('bungee.yml') {
        expand props
    }
}

assemble.dependsOn shadowJar
